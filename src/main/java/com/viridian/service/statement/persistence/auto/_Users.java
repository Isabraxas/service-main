package com.viridian.service.statement.persistence.auto;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.viridian.service.statement.persistence.AuthAdapter;
import com.viridian.service.statement.persistence.Customer;
import com.viridian.service.statement.persistence.CustomerAccount;
import com.viridian.service.statement.persistence.Role;
import com.viridian.service.statement.persistence.Settings;
import com.viridian.service.statement.persistence.StatementHeader;

/**
 * Class _Users was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Users extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> CREATED_BY_USER = Property.create("createdByUser", Integer.class);
    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<Integer> DISABLED_BY_USER = Property.create("disabledByUser", Integer.class);
    public static final Property<LocalDateTime> DISABLED_DATE = Property.create("disabledDate", LocalDateTime.class);
    public static final Property<Boolean> ENABLED = Property.create("enabled", Boolean.class);
    public static final Property<String> LASTNAME = Property.create("lastname", String.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> USERNAME = Property.create("username", String.class);
    public static final Property<List<AuthAdapter>> AUTH_ADAPTERS = Property.create("authAdapters", List.class);
    public static final Property<List<CustomerAccount>> CUSTOMER_ACCOUNTS = Property.create("customerAccounts", List.class);
    public static final Property<List<CustomerAccount>> CUSTOMER_ACCOUNTS1 = Property.create("customerAccounts1", List.class);
    public static final Property<List<Customer>> CUSTOMERS = Property.create("customers", List.class);
    public static final Property<List<Customer>> CUSTOMERS1 = Property.create("customers1", List.class);
    public static final Property<List<Settings>> SETTINGSS = Property.create("settingss", List.class);
    public static final Property<StatementHeader> STATEMENT_HEADER = Property.create("statementHeader", StatementHeader.class);
    public static final Property<List<StatementHeader>> STATEMENT_HEADERS = Property.create("statementHeaders", List.class);
    public static final Property<List<StatementHeader>> STATEMENT_HEADERS1 = Property.create("statementHeaders1", List.class);
    public static final Property<AuthAdapter> X_ADAPTER = Property.create("xADAPTER", AuthAdapter.class);
    public static final Property<Role> X_ROLE = Property.create("xROLE", Role.class);

    public void setCreatedByUser(int createdByUser) {
        writeProperty("createdByUser", createdByUser);
    }
    public int getCreatedByUser() {
        Object value = readProperty("createdByUser");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setDisabledByUser(int disabledByUser) {
        writeProperty("disabledByUser", disabledByUser);
    }
    public int getDisabledByUser() {
        Object value = readProperty("disabledByUser");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDisabledDate(LocalDateTime disabledDate) {
        writeProperty("disabledDate", disabledDate);
    }
    public LocalDateTime getDisabledDate() {
        return (LocalDateTime)readProperty("disabledDate");
    }

    public void setEnabled(boolean enabled) {
        writeProperty("enabled", enabled);
    }
	public boolean isEnabled() {
        Boolean value = (Boolean)readProperty("enabled");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setLastname(String lastname) {
        writeProperty("lastname", lastname);
    }
    public String getLastname() {
        return (String)readProperty("lastname");
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setUsername(String username) {
        writeProperty("username", username);
    }
    public String getUsername() {
        return (String)readProperty("username");
    }

    public void addToAuthAdapters(AuthAdapter obj) {
        addToManyTarget("authAdapters", obj, true);
    }
    public void removeFromAuthAdapters(AuthAdapter obj) {
        removeToManyTarget("authAdapters", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<AuthAdapter> getAuthAdapters() {
        return (List<AuthAdapter>)readProperty("authAdapters");
    }


    public void addToCustomerAccounts(CustomerAccount obj) {
        addToManyTarget("customerAccounts", obj, true);
    }
    public void removeFromCustomerAccounts(CustomerAccount obj) {
        removeToManyTarget("customerAccounts", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CustomerAccount> getCustomerAccounts() {
        return (List<CustomerAccount>)readProperty("customerAccounts");
    }


    public void addToCustomerAccounts1(CustomerAccount obj) {
        addToManyTarget("customerAccounts1", obj, true);
    }
    public void removeFromCustomerAccounts1(CustomerAccount obj) {
        removeToManyTarget("customerAccounts1", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<CustomerAccount> getCustomerAccounts1() {
        return (List<CustomerAccount>)readProperty("customerAccounts1");
    }


    public void addToCustomers(Customer obj) {
        addToManyTarget("customers", obj, true);
    }
    public void removeFromCustomers(Customer obj) {
        removeToManyTarget("customers", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Customer> getCustomers() {
        return (List<Customer>)readProperty("customers");
    }


    public void addToCustomers1(Customer obj) {
        addToManyTarget("customers1", obj, true);
    }
    public void removeFromCustomers1(Customer obj) {
        removeToManyTarget("customers1", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Customer> getCustomers1() {
        return (List<Customer>)readProperty("customers1");
    }


    public void addToSettingss(Settings obj) {
        addToManyTarget("settingss", obj, true);
    }
    public void removeFromSettingss(Settings obj) {
        removeToManyTarget("settingss", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Settings> getSettingss() {
        return (List<Settings>)readProperty("settingss");
    }


    public void setStatementHeader(StatementHeader statementHeader) {
        setToOneTarget("statementHeader", statementHeader, true);
    }

    public StatementHeader getStatementHeader() {
        return (StatementHeader)readProperty("statementHeader");
    }


    public void addToStatementHeaders(StatementHeader obj) {
        addToManyTarget("statementHeaders", obj, true);
    }
    public void removeFromStatementHeaders(StatementHeader obj) {
        removeToManyTarget("statementHeaders", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatementHeader> getStatementHeaders() {
        return (List<StatementHeader>)readProperty("statementHeaders");
    }


    public void addToStatementHeaders1(StatementHeader obj) {
        addToManyTarget("statementHeaders1", obj, true);
    }
    public void removeFromStatementHeaders1(StatementHeader obj) {
        removeToManyTarget("statementHeaders1", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatementHeader> getStatementHeaders1() {
        return (List<StatementHeader>)readProperty("statementHeaders1");
    }


    public void setXADAPTER(AuthAdapter xADAPTER) {
        setToOneTarget("xADAPTER", xADAPTER, true);
    }

    public AuthAdapter getXADAPTER() {
        return (AuthAdapter)readProperty("xADAPTER");
    }


    public void setXROLE(Role xROLE) {
        setToOneTarget("xROLE", xROLE, true);
    }

    public Role getXROLE() {
        return (Role)readProperty("xROLE");
    }


}
