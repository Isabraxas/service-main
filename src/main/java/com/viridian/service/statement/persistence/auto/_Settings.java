package com.viridian.service.statement.persistence.auto;

import java.time.LocalDateTime;
import java.time.LocalTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.viridian.service.statement.persistence.Users;

/**
 * Class _Settings was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _Settings extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> CONNECTION_RETRY_NUMBER = Property.create("connectionRetryNumber", Integer.class);
    public static final Property<LocalTime> EXECUTION_TIME = Property.create("executionTime", LocalTime.class);
    public static final Property<Integer> TOTAL_THREADS = Property.create("totalThreads", Integer.class);
    public static final Property<LocalDateTime> UPDATED_DATE = Property.create("updatedDate", LocalDateTime.class);
    public static final Property<Users> X_USER = Property.create("xUSER", Users.class);

    public void setConnectionRetryNumber(int connectionRetryNumber) {
        writeProperty("connectionRetryNumber", connectionRetryNumber);
    }
    public int getConnectionRetryNumber() {
        Object value = readProperty("connectionRetryNumber");
        return (value != null) ? (Integer) value : 0;
    }

    public void setExecutionTime(LocalTime executionTime) {
        writeProperty("executionTime", executionTime);
    }
    public LocalTime getExecutionTime() {
        return (LocalTime)readProperty("executionTime");
    }

    public void setTotalThreads(int totalThreads) {
        writeProperty("totalThreads", totalThreads);
    }
    public int getTotalThreads() {
        Object value = readProperty("totalThreads");
        return (value != null) ? (Integer) value : 0;
    }

    public void setUpdatedDate(LocalDateTime updatedDate) {
        writeProperty("updatedDate", updatedDate);
    }
    public LocalDateTime getUpdatedDate() {
        return (LocalDateTime)readProperty("updatedDate");
    }

    public void setXUSER(Users xUSER) {
        setToOneTarget("xUSER", xUSER, true);
    }

    public Users getXUSER() {
        return (Users)readProperty("xUSER");
    }


}
