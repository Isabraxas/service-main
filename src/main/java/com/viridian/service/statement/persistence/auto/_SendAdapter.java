package com.viridian.service.statement.persistence.auto;

import java.time.LocalDateTime;
import java.util.List;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

import com.viridian.service.statement.persistence.StatementHeader;
import com.viridian.service.statement.persistence.Users;

/**
 * Class _SendAdapter was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _SendAdapter extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> ADAPTER_CONFIG = Property.create("adapterConfig", String.class);
    public static final Property<Integer> CREATED_BY_USER = Property.create("createdByUser", Integer.class);
    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<Integer> DISABLED_BY_USER = Property.create("disabledByUser", Integer.class);
    public static final Property<LocalDateTime> DISABLED_DATE = Property.create("disabledDate", LocalDateTime.class);
    public static final Property<Boolean> ENABLED = Property.create("enabled", Boolean.class);
    public static final Property<String> NAME = Property.create("name", String.class);
    public static final Property<String> PK = Property.create("pk", String.class);
    public static final Property<List<StatementHeader>> STATEMENT_HEADERS = Property.create("statementHeaders", List.class);
    public static final Property<List<Users>> USERSS = Property.create("userss", List.class);

    public void setAdapterConfig(String adapterConfig) {
        writeProperty("adapterConfig", adapterConfig);
    }
    public String getAdapterConfig() {
        return (String)readProperty("adapterConfig");
    }

    public void setCreatedByUser(int createdByUser) {
        writeProperty("createdByUser", createdByUser);
    }
    public int getCreatedByUser() {
        Object value = readProperty("createdByUser");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setDisabledByUser(int disabledByUser) {
        writeProperty("disabledByUser", disabledByUser);
    }
    public int getDisabledByUser() {
        Object value = readProperty("disabledByUser");
        return (value != null) ? (Integer) value : 0;
    }

    public void setDisabledDate(LocalDateTime disabledDate) {
        writeProperty("disabledDate", disabledDate);
    }
    public LocalDateTime getDisabledDate() {
        return (LocalDateTime)readProperty("disabledDate");
    }

    public void setEnabled(boolean enabled) {
        writeProperty("enabled", enabled);
    }
	public boolean isEnabled() {
        Boolean value = (Boolean)readProperty("enabled");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setName(String name) {
        writeProperty("name", name);
    }
    public String getName() {
        return (String)readProperty("name");
    }

    public void setPk(String pk) {
        writeProperty("pk", pk);
    }
    public String getPk() {
        return (String)readProperty("pk");
    }

    public void addToStatementHeaders(StatementHeader obj) {
        addToManyTarget("statementHeaders", obj, true);
    }
    public void removeFromStatementHeaders(StatementHeader obj) {
        removeToManyTarget("statementHeaders", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<StatementHeader> getStatementHeaders() {
        return (List<StatementHeader>)readProperty("statementHeaders");
    }


    public void addToUserss(Users obj) {
        addToManyTarget("userss", obj, true);
    }
    public void removeFromUserss(Users obj) {
        removeToManyTarget("userss", obj, true);
    }
    @SuppressWarnings("unchecked")
    public List<Users> getUserss() {
        return (List<Users>)readProperty("userss");
    }


}
