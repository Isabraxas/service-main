package cc.viridian.service.statement.persistence.auto;

import java.time.LocalDateTime;

import cc.viridian.service.statement.persistence.Customer;
import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _CustomerSendStatement was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _CustomerSendStatement extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Integer> CREATED_BY_USER = Property.create("createdByUser", Integer.class);
    public static final Property<LocalDateTime> CREATED_DATE = Property.create("createdDate", LocalDateTime.class);
    public static final Property<String> CURRENCY = Property.create("currency", String.class);
    public static final Property<Boolean> ENABLED = Property.create("enabled", Boolean.class);
    public static final Property<LocalDateTime> LAST_EXECUTION_DATE = Property.create("lastExecutionDate", LocalDateTime.class);
    public static final Property<Integer> LAST_JOB_ID = Property.create("lastJobId", Integer.class);
    public static final Property<Integer> SEND_ADAPTER = Property.create("sendAdapter", Integer.class);
    public static final Property<LocalDateTime> START_DATE = Property.create("startDate", LocalDateTime.class);
    public static final Property<Integer> TOTAL_ERRORS = Property.create("totalErrors", Integer.class);
    public static final Property<Integer> TOTAL_EXECUTIONS = Property.create("totalExecutions", Integer.class);
    public static final Property<String> TYPE = Property.create("type", String.class);
    public static final Property<Customer> X_CUSTOMER = Property.create("xCUSTOMER", Customer.class);

    public void setCreatedByUser(int createdByUser) {
        writeProperty("createdByUser", createdByUser);
    }
    public int getCreatedByUser() {
        Object value = readProperty("createdByUser");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCreatedDate(LocalDateTime createdDate) {
        writeProperty("createdDate", createdDate);
    }
    public LocalDateTime getCreatedDate() {
        return (LocalDateTime)readProperty("createdDate");
    }

    public void setCurrency(String currency) {
        writeProperty("currency", currency);
    }
    public String getCurrency() {
        return (String)readProperty("currency");
    }

    public void setEnabled(boolean enabled) {
        writeProperty("enabled", enabled);
    }
	public boolean isEnabled() {
        Boolean value = (Boolean)readProperty("enabled");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setLastExecutionDate(LocalDateTime lastExecutionDate) {
        writeProperty("lastExecutionDate", lastExecutionDate);
    }
    public LocalDateTime getLastExecutionDate() {
        return (LocalDateTime)readProperty("lastExecutionDate");
    }

    public void setLastJobId(int lastJobId) {
        writeProperty("lastJobId", lastJobId);
    }
    public int getLastJobId() {
        Object value = readProperty("lastJobId");
        return (value != null) ? (Integer) value : 0;
    }

    public void setSendAdapter(int sendAdapter) {
        writeProperty("sendAdapter", sendAdapter);
    }
    public int getSendAdapter() {
        Object value = readProperty("sendAdapter");
        return (value != null) ? (Integer) value : 0;
    }

    public void setStartDate(LocalDateTime startDate) {
        writeProperty("startDate", startDate);
    }
    public LocalDateTime getStartDate() {
        return (LocalDateTime)readProperty("startDate");
    }

    public void setTotalErrors(int totalErrors) {
        writeProperty("totalErrors", totalErrors);
    }
    public int getTotalErrors() {
        Object value = readProperty("totalErrors");
        return (value != null) ? (Integer) value : 0;
    }

    public void setTotalExecutions(int totalExecutions) {
        writeProperty("totalExecutions", totalExecutions);
    }
    public int getTotalExecutions() {
        Object value = readProperty("totalExecutions");
        return (value != null) ? (Integer) value : 0;
    }

    public void setType(String type) {
        writeProperty("type", type);
    }
    public String getType() {
        return (String)readProperty("type");
    }

    public void setXCUSTOMER(Customer xCUSTOMER) {
        setToOneTarget("xCUSTOMER", xCUSTOMER, true);
    }

    public Customer getXCUSTOMER() {
        return (Customer)readProperty("xCUSTOMER");
    }


}
