package cc.viridian.service.statement.persistence.auto;

import java.time.LocalDateTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _JobExecution was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _JobExecution extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<Boolean> COMPLETED = Property.create("completed", Boolean.class);
    public static final Property<LocalDateTime> COMPLETED_DATE = Property.create("completedDate", LocalDateTime.class);
    public static final Property<LocalDateTime> EXECUTION_DATE = Property.create("executionDate", LocalDateTime.class);
    public static final Property<Integer> FIVE_TIME = Property.create("fiveTime", Integer.class);
    public static final Property<LocalDateTime> STARTED_DATE = Property.create("startedDate", LocalDateTime.class);
    public static final Property<LocalDateTime> STATEMENT_DATE = Property.create("statementDate", LocalDateTime.class);
    public static final Property<String> STATUS = Property.create("status", String.class);
    public static final Property<Integer> TOTAL_ACCOUNTS = Property.create("totalAccounts", Integer.class);
    public static final Property<Integer> TOTAL_THREADS = Property.create("totalThreads", Integer.class);

    public void setCompleted(boolean completed) {
        writeProperty("completed", completed);
    }
	public boolean isCompleted() {
        Boolean value = (Boolean)readProperty("completed");
        return (value != null) ? value.booleanValue() : false;
    }

    public void setCompletedDate(LocalDateTime completedDate) {
        writeProperty("completedDate", completedDate);
    }
    public LocalDateTime getCompletedDate() {
        return (LocalDateTime)readProperty("completedDate");
    }

    public void setExecutionDate(LocalDateTime executionDate) {
        writeProperty("executionDate", executionDate);
    }
    public LocalDateTime getExecutionDate() {
        return (LocalDateTime)readProperty("executionDate");
    }

    public void setFiveTime(int fiveTime) {
        writeProperty("fiveTime", fiveTime);
    }
    public int getFiveTime() {
        Object value = readProperty("fiveTime");
        return (value != null) ? (Integer) value : 0;
    }

    public void setStartedDate(LocalDateTime startedDate) {
        writeProperty("startedDate", startedDate);
    }
    public LocalDateTime getStartedDate() {
        return (LocalDateTime)readProperty("startedDate");
    }

    public void setStatementDate(LocalDateTime statementDate) {
        writeProperty("statementDate", statementDate);
    }
    public LocalDateTime getStatementDate() {
        return (LocalDateTime)readProperty("statementDate");
    }

    public void setStatus(String status) {
        writeProperty("status", status);
    }
    public String getStatus() {
        return (String)readProperty("status");
    }

    public void setTotalAccounts(int totalAccounts) {
        writeProperty("totalAccounts", totalAccounts);
    }
    public int getTotalAccounts() {
        Object value = readProperty("totalAccounts");
        return (value != null) ? (Integer) value : 0;
    }

    public void setTotalThreads(int totalThreads) {
        writeProperty("totalThreads", totalThreads);
    }
    public int getTotalThreads() {
        Object value = readProperty("totalThreads");
        return (value != null) ? (Integer) value : 0;
    }

}
