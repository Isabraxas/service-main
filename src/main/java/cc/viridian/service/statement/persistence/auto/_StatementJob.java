package cc.viridian.service.statement.persistence.auto;

import java.time.LocalDate;
import java.time.LocalDateTime;

import org.apache.cayenne.CayenneDataObject;
import org.apache.cayenne.exp.Property;

/**
 * Class _StatementJob was generated by Cayenne.
 * It is probably a good idea to avoid changing this class manually,
 * since it may be overwritten next time code is regenerated.
 * If you need to make any customizations, please use subclass.
 */
public abstract class _StatementJob extends CayenneDataObject {

    private static final long serialVersionUID = 1L; 

    public static final String ID_PK_COLUMN = "ID";

    public static final Property<String> ACCOUNT_CODE = Property.create("accountCode", String.class);
    public static final Property<String> ACCOUNT_CURRENCY = Property.create("accountCurrency", String.class);
    public static final Property<String> ACCOUNT_TYPE = Property.create("accountType", String.class);
    public static final Property<String> ADAPTER_COREBANK = Property.create("adapterCorebank", String.class);
    public static final Property<String> ADAPTER_FORMAT = Property.create("adapterFormat", String.class);
    public static final Property<String> ADAPTER_SEND = Property.create("adapterSend", String.class);
    public static final Property<String> COREBANK_ERROR_CODE = Property.create("corebankErrorCode", String.class);
    public static final Property<String> COREBANK_ERROR_DESC = Property.create("corebankErrorDesc", String.class);
    public static final Property<Integer> COREBANK_RETRIES = Property.create("corebankRetries", Integer.class);
    public static final Property<LocalDateTime> COREBANK_TRY_AGAIN_AT = Property.create("corebankTryAgainAt", LocalDateTime.class);
    public static final Property<String> CUSTOMER_CODE = Property.create("customerCode", String.class);
    public static final Property<String> FORMATTER_ERROR_CODE = Property.create("formatterErrorCode", String.class);
    public static final Property<String> FORMATTER_ERROR_DESC = Property.create("formatterErrorDesc", String.class);
    public static final Property<String> FREQUENCY = Property.create("frequency", String.class);
    public static final Property<Integer> PARTITION = Property.create("partition", Integer.class);
    public static final Property<LocalDate> PROCESS_DATE_FROM = Property.create("processDateFrom", LocalDate.class);
    public static final Property<LocalDate> PROCESS_DATE_TO = Property.create("processDateTo", LocalDate.class);
    public static final Property<String> SEND_RECIPIENT = Property.create("sendRecipient", String.class);
    public static final Property<String> SENDER_ERROR_CODE = Property.create("senderErrorCode", String.class);
    public static final Property<String> SENDER_ERROR_DESC = Property.create("senderErrorDesc", String.class);
    public static final Property<Integer> SENDER_OFFSET = Property.create("senderOffset", Integer.class);
    public static final Property<Integer> SENDER_RETRIES = Property.create("senderRetries", Integer.class);
    public static final Property<LocalDateTime> SENDER_TRY_AGAIN_AT = Property.create("senderTryAgainAt", LocalDateTime.class);
    public static final Property<String> STATUS = Property.create("status", String.class);
    public static final Property<LocalDateTime> TIME_CREATE_JOB = Property.create("timeCreateJob", LocalDateTime.class);
    public static final Property<LocalDateTime> TIME_END_JOB = Property.create("timeEndJob", LocalDateTime.class);
    public static final Property<LocalDateTime> TIME_START_JOB = Property.create("timeStartJob", LocalDateTime.class);

    public void setAccountCode(String accountCode) {
        writeProperty("accountCode", accountCode);
    }
    public String getAccountCode() {
        return (String)readProperty("accountCode");
    }

    public void setAccountCurrency(String accountCurrency) {
        writeProperty("accountCurrency", accountCurrency);
    }
    public String getAccountCurrency() {
        return (String)readProperty("accountCurrency");
    }

    public void setAccountType(String accountType) {
        writeProperty("accountType", accountType);
    }
    public String getAccountType() {
        return (String)readProperty("accountType");
    }

    public void setAdapterCorebank(String adapterCorebank) {
        writeProperty("adapterCorebank", adapterCorebank);
    }
    public String getAdapterCorebank() {
        return (String)readProperty("adapterCorebank");
    }

    public void setAdapterFormat(String adapterFormat) {
        writeProperty("adapterFormat", adapterFormat);
    }
    public String getAdapterFormat() {
        return (String)readProperty("adapterFormat");
    }

    public void setAdapterSend(String adapterSend) {
        writeProperty("adapterSend", adapterSend);
    }
    public String getAdapterSend() {
        return (String)readProperty("adapterSend");
    }

    public void setCorebankErrorCode(String corebankErrorCode) {
        writeProperty("corebankErrorCode", corebankErrorCode);
    }
    public String getCorebankErrorCode() {
        return (String)readProperty("corebankErrorCode");
    }

    public void setCorebankErrorDesc(String corebankErrorDesc) {
        writeProperty("corebankErrorDesc", corebankErrorDesc);
    }
    public String getCorebankErrorDesc() {
        return (String)readProperty("corebankErrorDesc");
    }

    public void setCorebankRetries(int corebankRetries) {
        writeProperty("corebankRetries", corebankRetries);
    }
    public int getCorebankRetries() {
        Object value = readProperty("corebankRetries");
        return (value != null) ? (Integer) value : 0;
    }

    public void setCorebankTryAgainAt(LocalDateTime corebankTryAgainAt) {
        writeProperty("corebankTryAgainAt", corebankTryAgainAt);
    }
    public LocalDateTime getCorebankTryAgainAt() {
        return (LocalDateTime)readProperty("corebankTryAgainAt");
    }

    public void setCustomerCode(String customerCode) {
        writeProperty("customerCode", customerCode);
    }
    public String getCustomerCode() {
        return (String)readProperty("customerCode");
    }

    public void setFormatterErrorCode(String formatterErrorCode) {
        writeProperty("formatterErrorCode", formatterErrorCode);
    }
    public String getFormatterErrorCode() {
        return (String)readProperty("formatterErrorCode");
    }

    public void setFormatterErrorDesc(String formatterErrorDesc) {
        writeProperty("formatterErrorDesc", formatterErrorDesc);
    }
    public String getFormatterErrorDesc() {
        return (String)readProperty("formatterErrorDesc");
    }

    public void setFrequency(String frequency) {
        writeProperty("frequency", frequency);
    }
    public String getFrequency() {
        return (String)readProperty("frequency");
    }

    public void setPartition(Integer partition) {
        writeProperty("partition", partition);
    }
    public Integer getPartition() {
        return (Integer)readProperty("partition");
    }

    public void setProcessDateFrom(LocalDate processDateFrom) {
        writeProperty("processDateFrom", processDateFrom);
    }
    public LocalDate getProcessDateFrom() {
        return (LocalDate)readProperty("processDateFrom");
    }

    public void setProcessDateTo(LocalDate processDateTo) {
        writeProperty("processDateTo", processDateTo);
    }
    public LocalDate getProcessDateTo() {
        return (LocalDate)readProperty("processDateTo");
    }

    public void setSendRecipient(String sendRecipient) {
        writeProperty("sendRecipient", sendRecipient);
    }
    public String getSendRecipient() {
        return (String)readProperty("sendRecipient");
    }

    public void setSenderErrorCode(String senderErrorCode) {
        writeProperty("senderErrorCode", senderErrorCode);
    }
    public String getSenderErrorCode() {
        return (String)readProperty("senderErrorCode");
    }

    public void setSenderErrorDesc(String senderErrorDesc) {
        writeProperty("senderErrorDesc", senderErrorDesc);
    }
    public String getSenderErrorDesc() {
        return (String)readProperty("senderErrorDesc");
    }

    public void setSenderOffset(Integer senderOffset) {
        writeProperty("senderOffset", senderOffset);
    }
    public Integer getSenderOffset() {
        return (Integer)readProperty("senderOffset");
    }

    public void setSenderRetries(int senderRetries) {
        writeProperty("senderRetries", senderRetries);
    }
    public int getSenderRetries() {
        Object value = readProperty("senderRetries");
        return (value != null) ? (Integer) value : 0;
    }

    public void setSenderTryAgainAt(LocalDateTime senderTryAgainAt) {
        writeProperty("senderTryAgainAt", senderTryAgainAt);
    }
    public LocalDateTime getSenderTryAgainAt() {
        return (LocalDateTime)readProperty("senderTryAgainAt");
    }

    public void setStatus(String status) {
        writeProperty("status", status);
    }
    public String getStatus() {
        return (String)readProperty("status");
    }

    public void setTimeCreateJob(LocalDateTime timeCreateJob) {
        writeProperty("timeCreateJob", timeCreateJob);
    }
    public LocalDateTime getTimeCreateJob() {
        return (LocalDateTime)readProperty("timeCreateJob");
    }

    public void setTimeEndJob(LocalDateTime timeEndJob) {
        writeProperty("timeEndJob", timeEndJob);
    }
    public LocalDateTime getTimeEndJob() {
        return (LocalDateTime)readProperty("timeEndJob");
    }

    public void setTimeStartJob(LocalDateTime timeStartJob) {
        writeProperty("timeStartJob", timeStartJob);
    }
    public LocalDateTime getTimeStartJob() {
        return (LocalDateTime)readProperty("timeStartJob");
    }

}
